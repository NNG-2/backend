version: '3.1'

services:
  db:
    image: postgres:10
    container_name: db
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASS
    volumes:
      - "./volumes/psql:/var/lib/postgresql"
    expose:
      - 5432
    ports:
      - 5432:5432

  app:
    image: maven:3.9.2-eclipse-temurin-17
    container_name: app
    restart: always
    env_file: .env
    depends_on:
      - db
    ports:
      - 8080:8080
    volumes:
      - "./volumes/m2:/root/.m2"
      - ".:/usr/app"
    environment:
        SPRING_APPLICATION_JSON: '{
          "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.PostgreSQLDialect",
          "spring.jpa.defer-datasource-initialization": "true",
          "spring.jpa.hibernate.ddl-auto": "update",
          "spring.jpa.hibernate.show-sql": "true",
          "spring.sql.init.mode": "always",
          "spring.sql.init.continue-on-error": "true",
          "spring.datasource.initialize": "true",
          "spring.datasource.url": "jdbc:postgresql://db:5432/$DB_NAME",
          "spring.datasource.username": "$DB_USER",
          "spring.datasource.password": "$DB_PASS",
          "spring.servlet.multipart.max-file-size": "100MB",
          "spring.servlet.multipart.max-request-size": "100MB"
        }'
    command: [ 'mvn', '-f', '/usr/app', 'spring-boot:run' ]